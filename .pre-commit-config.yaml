# Pre-commit hooks configuration for web scrapper CLI
# Run: pre-commit install to set up git hooks
# Run: pre-commit run --all-files to run all hooks on all files

repos:
  # Python code formatting with black
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]
        types: [python]

  # Import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]
        types: [python]

  # Python linting with flake8 (basic config)
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--config=.flake8]
        types: [python]

  # General file cleanup
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Remove trailing whitespace
      - id: trailing-whitespace
        types: [text]
      # Ensure files end with newline
      - id: end-of-file-fixer
        types: [text]
      # Check YAML syntax
      - id: check-yaml
        types: [yaml]
      # Check JSON syntax
      - id: check-json
        types: [json]
      # Check for large files (>500KB)
      - id: check-added-large-files
        args: [--maxkb=500]
      # Check for merge conflicts
      - id: check-merge-conflict
      # Check Python AST (syntax errors)
      - id: check-ast
        types: [python]
      # Check for debugger imports
      - id: debug-statements
        types: [python]

# Global configuration
default_language_version:
  python: python3

# Skip hooks for specific commits (use with --skip)
# Example: git commit -m "message" --skip black,isort
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
